#!/usr/bin/env ruby

require 'rake'
require 'gxl'
require 'jars_as_modules'


task :extract => ['deps.xml', 'l1-names.pairs', 'modules-names.pairs']
task :default => [:extract, :stats, :numerize]

desc "Dependencies extracted by Dependency Finder"
file 'deps.xml' => 'jars' do
  system "DependencyExtractor -xml -out deps.xml jars/*.jar"
end

file 'l1-names.pairs' => 'deps.xml' do
  depxml_to_pairs2('deps.xml', 'l1-names.pairs')
end

file 'modules-names.pairs' => 'jars' do
  pairs = extract_modules(Dir.glob("jars/*.jar"))
  puts_pairs(pairs, "modules-names.pairs")
end

task :numerize => ['l1-names.pairs', 'modules-names.pairs'] do
  system "to_numeric_network.rb l1-names.pairs modules-names.pairs l1-numbers.pairs modules-numbers.pairs"
end

directory 'jars'

task :analysis => :numerize do
  system "analysis.rb -e l1-names.pairs -m modules-names.pairs -v vertices.data -c clusters.data -g global.data"
end

task :stats => :analysis do
  system "stat_analysis.R vertices.data clusters.data global.data"
end

task :distance_matrix => :numerize do
  system "distances.R l1-numbers.pairs distances-und.csv FALSE"
end

if __FILE__ == $0; system "rake --trace -f #{$0} #{ARGV.join(' ')}"; end

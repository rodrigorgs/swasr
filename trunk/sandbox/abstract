#!/usr/bin/env ruby
require 'tempfile'
require 'gxl'

def tempname
  x = Tempfile.open('temp')
  path = x.path
  x.delete
  return path
end

properties = ARGV[0]
txt_input = ARGV[1]
txt_output = ARGV[2]
algorithm = ARGV[3]

if algorithm.nil?
  line = IO.readlines(properties).grep(/clustererType = (.*)/)[0]
  line =~ /clustererType = (.*)/
  algorithm = $1
end

gxl_input = tempname
gxl_output = tempname

l1_to_gxl(txt_input, gxl_input)

cmd = "java abstractor.Abstractor #{properties} #{gxl_input} #{gxl_output} #{algorithm}"
puts cmd
system "java abstractor.Abstractor"
puts `#{cmd}`
#system cmd

gxl_to_l2(gxl_output, txt_output)

require 'fileutils'
#FileUtils.rm [gxl_input, gxl_output]


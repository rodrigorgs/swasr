@incollection{rubin2007,
	Abstract = {{Software development processes are often not explicitly modelled and sometimes even chaotic. In order to keep track of the involved documents and files, engineers use Software Configuration Management (SCM) systems. Along the way, those systems collect and store information on the software process itself. Thus, SCM information can be used for constructing explicit process models, which is called software process mining. In this paper we show that (1) a Process Mining Framework can be used for obtaining software process models as well as for analysing and optimising them; (2) an algorithmic approach, which arose from our research on software processes, is integrated in the framework.}},
	Citeulike-article-id = {{1885717}},
	Citeulike-linkout-0 = {{http://dx.doi.org/10.1007/978-3-540-72426-1_15}},
	Citeulike-linkout-1 = {{http://www.springerlink.com/content/e863ut5t2765110r}},
	Doi = {{10.1007/978-3-540-72426-1_15}},
	Journal = {{Software Process Dynamics and Agility}},
	key = {{rubin07}},
	Posted-at = {{2008-06-17 18:18:32}},
	Priority = {{2}},
	Url = {{http://dx.doi.org/10.1007/978-3-540-72426-1_15}},
	author = {Rubin, Vladimir and Günther, Christian and van der Aalst, Wil and Kindler, Ekkart and van Dongen, Boudewijn and Schäfer, Wilhelm},
	title = {{Process Mining Framework for Software Processes}},
	pages = {{169-181}},
	year = {{2007}},
	keywords = "process mining, software engineering"
}

@article{aalst2004,
	Address = {{Piscataway, NJ, USA}},
	Doi = {{http://dx.doi.org/10.1109/TKDE.2004.47}},
	Issn = {{1041-4347}},
	key = {{aalst04}},
	Publisher = {{IEEE Educational Activities Department}},
	author = {van der Aalst, Wil and Weijters, Ton and Maruster, Laura},
	title = {{Workflow Mining: Discovering Process Models from Event Logs}},
	journal = {{IEEE Trans. on Knowl. and Data Eng.}},
	volume = {{16}},
	number = {{9}},
	pages = {{1128-1142}},
	year = {{2004}},
	keywords = "process mining"
}

@article{mockus2002,
	Address = {{New York, NY, USA}},
	Doi = {{http://doi.acm.org/10.1145/567793.567795}},
	Issn = {{1049-331X}},
	key = {{mockus02}},
	Publisher = {{ACM}},
	author = {Mockus, Audris and Fielding, Roy T. and Herbsleb, James D.},
	title = {{Two case studies of open source software development: Apache and Mozilla}},
	journal = {{ACM Trans. Softw. Eng. Methodol.}},
	volume = {{11}},
	number = {{3}},
	pages = {{309-346}},
	year = {{2002}},
	keywords = "open source, software engineering"
}

@Article{crowston2005,
	Keywords = {{core/periphery, design patterns}},
	Url = {{http://firstmonday.org/htbin/cgiwrap/bin/ojs/index.php/fm/article/view/1207/1127}},
	author = {Crowston, Kevin and Howison, James},
	title = {{The social structure of free and open source software development}},
	journal = {{First Monday}},
	volume = {{10}},
	number = {{2}},
	year = {{2005}},
	keywords = "open source, software engineering"
}

@Article{robles2006,
	Abstract = {{A common problem that management faces in software companies is the high instability of their staff. In libre (free, open source) software projects, the permanence of developers is also an open issue, with the potential of causing problems amplified by the self-organizing nature that most of them exhibit. Hence, human resources in libre software projects are even more difficult to manage: developers are in most cases not bound by a contract and, in addition, there is not a real management structure concerned about this problem. This raises some interesting questions with respect to the composition of development teams in libre software projects, and how they evolve over time. There are projects lead by their original founders (some sort of â code godsâ), while others are driven by several different developer groups over time (i.e. the project â regeneratesâ itself). In this paper, we propose a quantitative methodology, based on the analysis of the activity in the source code management repositories, to study how these processes (developers leaving, developers joining) affect libre software projects. The basis of it is the analysis of the composition of the core group, the group of developers most active in a project, for several time lapses. We will apply this methodology to several large, well-known libre software projects, and show how it can be used to characterize them. In addition, we will discuss the lessons that can be learned, and the validity of our proposal.}},
	Booktitle = {{Open Source Systems}},
	Citeulike-article-id = {{3181294}},
	Citeulike-linkout-0 = {{http://dx.doi.org/10.1007/0-387-34226-5_28}},
	Doi = {{10.1007/0-387-34226-5_28}},
	Keywords = {{conf:oss, core/periphery}},
	Posted-at = {{2008-12-08 15:43:05}},
	Priority = {{2}},
	Url = {{http://dx.doi.org/10.1007/0-387-34226-5_28}},
	author = {Robles, Gregorio and Gonzalez-Barahona, Jesus},
	title = {{Contributor Turnover in Libre Software Projects}},
	journal = {{Open Source Systems}},
	pages = {{273-286}},
	year = {{2006}},
	keywords = "open source, software engineering"
}

@InProceedings{capiluppi2007,
	Author:corp = {{International Federation for Information Processing}},
	BookTitle = {{Open Source Development, Adoption and Innovation}},
	Editor = {Feller, Joseph and Fitzgerald, Brian and Scacchi, Walt and Silitti, Alberto},
	Keywords = {{core/periphery}},
	Publisher = {{Springer}},
	author = {Capiluppi, Andrea and Michlmayr, Martin},
	title = {{From the Cathedral to the Bazaar: An Empirical Study of the Lifecycle of Volunteer Community Projects}},
	pages = {{31-44}},
	year = {{2007}},
	keywords = "open source, software engineering"
}

@InProceedings{robles2009,
	BookTitle = {{Mining Software Repositories, 2009. MSR â09. 6th IEEE International Working Conference on}},
	Doi = {{10.1109/MSR.2009.5069497}},
	Keywords = {{public domain software, software development managementcore team, free software, libre software projects, open source software, source code management repositories; conf:msr, core/periphery}},
	Month = {{May}},
	author = {Robles, G. and Gonzalez-Barahona, J. M. and Herraiz, I.},
	title = {{Evolution of the core team of developers in libre software projects}},
	pages = {{167-170}},
	year = {{2009}},
	keywords = "open source, software engineering"
}

@article{glass1996,
	Address = {{New York, NY, USA}},
	Doi = {{http://doi.acm.org/10.1145/240455.240458}},
	Issn = {{0001-0782}},
	Publisher = {{ACM}},
	author = {Glass, Robert L.},
	title = {{The relationship between theory and practice in software engineering}},
	journal = {{Commun. ACM}},
	volume = {{39}},
	number = {{11}},
	pages = {{11-13}},
	year = {{1996}},
	keywords = "software engineering, practice"
}

@inproceedings{scacchi2001,
	booktitle = {{In Proceedings of the First Workshop on Open Source Software Engineering}},
	author = {Scacchi, Walt},
	title = {{Software Development Practices in Open Software Development Communities: A Comparative Case Study}},
	year = {{2001}},
	keywords = "software engineering, open source, practice"
}

@article{krishnamurthy2002,
	Citeulike-article-id = {{732811}},
	Keywords = {{community, open, oss, projects, source}},
	Posted-at = {{2006-07-03 12:31:27}},
	Priority = {{0}},
	Url = {{http://www.firstmonday.org/issues/issue7_6/krishnamurthy/index.html}},
	author = {Krishnamurthy, Sandeep},
	title = {{Cave or Community?: An Empirical Examination of 100 Mature Open Source Projects}},
	journal = {{First Monday}},
	volume = {{7}},
	number = {{6}},
	year = {{2002}},
}

@article{wheeler2007,
	Abstract = {{This paper provides quantitative data that, in many cases, using open source software / free software (abbreviated as OSS/FS, FLOSS, or FOSS) is a reasonable or even superior approach to using their proprietary competition according to various measures. This paper’s goal is to show that you should consider using OSS/FS when acquiring software. This paper examines market share, reliability, performance, scalability, security, and total cost of ownership. It also has sections on non-quantitative issues, unnecessary fears, OSS/FS on the desktop, usage reports, governments and OSS/FS, other sites providing related information, and ends with some conclusions. An appendix gives more background information about OSS/FS. You can view this paper at http://www.dwheeler.com/oss_fs_why.html (HTML format). A short presentation (briefing) based on this paper is also available. Palm PDA users may wish to use Plucker to view this longer report. Old archived copies and a list of changes are also available.}},
	Citeulike-article-id = {{581428}},
	Citeulike-linkout-0 = {{http://www.dwheeler.com/oss_fs_why.html}},
	Keywords = {{open-source}},
	Posted-at = {{2008-04-13 13:28:10}},
	Priority = {{2}},
	Url = {{http://www.dwheeler.com/oss_fs_why.html}},
	author = {Wheeler, David A.},
	title = {{Why Open Source Software / Free Software (OSS/FS, FOSS, or FLOSS)?: Look at the Numbers!}},
	year = {{2007}},
}

@article{grady1993,
	Address = {{New York, NY, USA}},
	Doi = {{http://doi.acm.org/10.1145/163359.163369}},
	Issn = {{0001-0782}},
	Publisher = {{ACM}},
	author = {Grady, Robert B.},
	title = {{Practical results from measuring software quality}},
	journal = {{Commun. ACM}},
	volume = {{36}},
	number = {{11}},
	pages = {{62-68}},
	year = {{1993}},
	keywords = "practice"
}

@book{raymond2001,
	address = {{Sebastopol, CA, USA}},
	Isbn = {{0596001088}},
	Note = {{Foreword By-Young, Bob}},
	publisher = {{O’Reilly and Associates, Inc.}},
	author = {Raymond, Eric S.},
	title = {{The Cathedral and the Bazaar: Musings on Linux and Open Source by an Accidental Revolutionary}},
	year = {{2001}},
	keywords = "open source"
}

@inproceedings{mckinney2005,
	address = {{New York, NY, USA}},
	booktitle = {{SIGCSE ’05: Proceedings of the 36th SIGCSE technical symposium on Computer science education}},
	Doi = {{http://doi.acm.org/10.1145/1047344.1047494}},
	Isbn = {{1-58113-997-7}},
	Location = {{St. Louis, Missouri, USA}},
	publisher = {{ACM}},
	author = {McKinney, Dawn and Denton, Leo F.},
	title = {{Affective assessment of team skills in agile CS1 labs: the good, the bad, and the ugly}},
	pages = {{465-469}},
	year = {{2005}},
	keywords = "agile"
}

@misc{rising2000,
	author = {Rising, Linda and Janoff, Norman S. and Teams, For Small},
	title = {{The Scrum Software Development Process for Small Teams}},
	year = {{2000}},
	keywords = "agile, experience report"
}

@article{szulanski1996,
	Abstract = {{The ability to transfer best practices internally is critical to a firm’s ability to build competitive advantage through the appropriation of rents from scarce internal knowledge Just as a firm’s distinctive competencies might be difficult for other firms to imitate, its best practices could be difficult to imitate internally. Yet, little systematic attention has been paid to such internal stickiness. The author analyzes internal stickiness of knowledge transfer and tests the resulting model using canonical correlation analysis of a data set consisting of 271 observations of 122 best-practice transfers in eight companies Contrary to conventional wisdom that blames primarily motivational factors, the study findings show the major barriers to internal knowledge transfer to be knowledge-related factors such as the recipient’s lack of absorptive capacity, causal ambiguity, and an arduous relationship between the source and the recipient.}},
	Citeulike-article-id = {{3078624}},
	Citeulike-linkout-0 = {{http://dx.doi.org/10.2307/2486989}},
	Citeulike-linkout-1 = {{http://www.jstor.org/stable/2486989}},
	Doi = {{10.2307/2486989}},
	Keywords = {{gss, knowledgetransfer}},
	Posted-at = {{2008-11-04 23:19:54}},
	Priority = {{0}},
	Publisher = {{John Wiley & Sons}},
	Url = {{http://dx.doi.org/10.2307/2486989}},
	author = {Szulanski, Gabriel},
	title = {{Exploring Internal Stickiness: Impediments to the Transfer of Best Practice Within the Firm}},
	journal = {{Strategic Management Journal}},
	volume = {{17}},
	pages = {{27-43}},
	year = {{1996}},
	keywords = "practice"
}

@article{jacobson2007,
	Address = {{Los Alamitos, CA, USA}},
	Doi = {{http://doi.ieeecomputersociety.org/10.1109/RE.2007.6}},
	Issn = {{1090-705X}},
	Publisher = {{IEEE Computer Society}},
	author = {Jacobson, Ivar},
	title = {{Enough of Processes- Let's Do Practices}},
	journal = {{Requirements Engineering, IEEE International Conference on}},
	volume = {{0}},
	year = {{2007}},
	keywords = "practice"
}

@inproceedings{michlmayr2005,
	address = {{Amsterdam, The Netherlands, The Netherlands}},
	booktitle = {{Proceeding of the 2005 conference on Software Engineering: Evolution and Emerging Technologies}},
	Isbn = {{1-58603-559-2}},
	publisher = {{IOS Press}},
	author = {Michlmayr, Martin},
	title = {{Software Process Maturity and the Success of Free Software Projects}},
	pages = {{3-14}},
	year = {{2005}},
	keywords = "open source, practice"
}

